For Windows: Ctrl+Insert to copy and Shift+Insert to paste.

https://training.linuxfoundation.org/wp-content/uploads/2019/05/Important-Tips-CKA-CKAD-4.30.19.pdf

Candidates may use their Chrome or Chromium browser to open one additional tab in order to
access assets at https://kubernetes.io/docs/ and its subdomain, https://github.com/kubernetes/
and its subdomains, or https://kubernetes.io/blog/. No other tabs may be opened and no other
sites may be navigated to. The allowed sites above may contain links that point to external sites.
It is the responsibility of the candidate not to click on any links that cause them to navigate to a
domain that is not allowed.

source: https://codeburst.io/the-ckad-browser-terminal-10fab2e8122e

Bash Aliases
First thing when I got access to the terminal I did define aliases:


vim ~/.bashrc
# then add those two:
alias k=kubectl
alias kn='kubectl config set-context --current --namespace '

vi ~/.vimrc
# then add these two lines to the file
set tabstop=2
set expandtab # use spaces for tabs

When in vim you can press Esc and type :set number or :set nonumber + Enter to toggle line numbers.

You can also just jump to a line number with Esc :22 + Enter.

For basic searching:

/pattern - search forward for pattern
?pattern - search backward
n - repeat forward search
N - repeat backward

:s/string/replacewiththisstring/g  -- single replacement
:%s/string/replacewiththisstring/g  --all occurances

Mark lines: Esc+V (then arrow keys)
Copy marked lines: y
Cut marked lines: d
Past lines: p or P

challenges here https://codeburst.io/kubernetes-ckad-weekly-challenges-overview-and-tips-7282b36a2681


kubectl get pods --all-namespaces | grep Running | awk '{print "some text " $1 "some more text " $2}'

kubectl get pods -n namespace | grep Terminating | while read line; do 
pod_name=$(echo $line | awk '{print $2}' ) name_space=$(echo $line | awk 
'{print $1}' ); kubectl delete pods $pod_name -n $name_space --grace-period=0 --force; 
done


kubectl get pods --all-namespaces| grep Evicted |  $(awk '{print "kubectl -n " $1 " delete pod "$2}')

MUST READ

https://stackoverflow.com/questions/56486023/does-kubernetes-consider-the-current-memory-usage-when-scheduling-pods


apiserver: main component exposing APIs for all the other master components
scheduler: uses information in the pod spec to decide on which node to run a pod
controller-manager: responsible for node management (detecting if a node fails), pod replication, and endpoint creation
etcd: key/value store used for storing all internal cluster data
Node components are worker machines in Kubernetes, managed by the master. Each node contains the necessary components to run pods:

kubelet: handles all communication between the master and the node on which it is running. It interfaces with the container runtime to deploy and monitor containers
kube-proxy: is in charge with maintaining network rules for the node. It also handles communication between pods, nodes, and the outside world.
container runtime: runs containers on the node.


kubectl get pods -o wide --sort-by=.spec.nodeName | grep -i Terminating

k describe pod xxx-deployment-8dcd499c-7np24 | grep -i 'Last State' -A 4
    Last State:     Terminated
      Reason:       Error
      Exit Code:    137
      Started:      Tue, 11 Feb 2020 09:35:00 -0500
      Finished:     Tue, 11 Feb 2020 09:36:14 -0500


kubectl get po -o jsonpath='{range .items[*]}{.spec.containers[*].image}{"\n"}{end}'
